{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Nav","props","to","category","map","topic","title","activeClassName","className","Profile","Home","Topics","data","exact","path","contents","box","Box","params","useParams","box_title","box_sub","i","length","sub","App","state","classification","callApi","a","fetch","response","json","body","this","then","res","setState","catch","err","console","log","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.930bf1b0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Route, Switch, BrowserRouter as Router, NavLink, useParams, Link } from 'react-router-dom';\n\n\nfunction Nav(props) {\n  return (\n    <nav>\n      <h1><Link to=\"/\">Programing</Link></h1>\n      <ul>\n      { props.category ? props.category.map( topic => \n        <li>\n          <NavLink to={\"/\"+topic.title} activeClassName=\"selected\" className=\"link\" >{topic.title}</NavLink> \n        </li>) : \"\"}\n      </ul>\n    </nav>\n  );\n}\nfunction Profile() {\n  return (\n    <div className=\"profile\">\n      <h1>Profile</h1>\n    </div>\n  );\n}\n\n\nfunction Home() {\n  return (\n    <h1>Home</h1>\n  );\n}\n\nfunction Topics(props) {\n  let data = props.data;\n  return (\n    <div className=\"Topics\">\n      <Switch>\n        <Route exact path={\"/\"+data.title}>\n          <div className=\"contents\">\n            <h1 className=\"title\">{data.title}</h1>\n            <div className=\"Container\">\n              {props.data.contents ? props.data.contents.map( box => <NavLink to={\"/\"+data.title+\"/\"+box.title} className=\"box\">{box.title}</NavLink>) : \"\"}\n            </div>\n          </div>\n          <Profile></Profile>\n        </Route>\n        \n        <Route path={\"/\"+data.title+\"/:box_title\"}>\n          <Box></Box>\n          <Link to={\"/\"+data.title}>Go back</Link>\n        </Route>\n      </Switch>\n    </div>\n  );\n  function Box() {\n    var params = useParams();\n    var box_title = \"Sorry\";\n    var box_sub = \"Not Found\"\n    \n    for (var i = 0; i < data.contents.length; i++) {\n      if (data.contents[i].title === params.box_title) {\n        box_title = data.contents[i].title;\n        box_sub = data.contents[i].sub;\n        break;\n      }\n    }\n    return (\n      <div className=\"topic\">\n        <h1 className=\"title\">{box_title}</h1>\n        <p className=\"contents\">{box_sub}</p>\n      </div>\n    );\n  }\n}\n\n\n\n\nclass App extends React.Component {\n  constructor (props){\n    super(props)\n  }\n  state = {\n    data: null,\n    classification: null\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({data: res}))\n      .catch(err => console.log(err));\n    // this.callApi_classification()\n    //   .then(res => this.setState({classification: res}))\n    //   .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('http://hanji-serve.herokuapp.com/api/data');\n    const body = await response.json();\n    return body; \n  }\n  // callApi_classification = async () => {\n  //   const response = await fetch('/api/classification');\n  //   const body = await response.json();\n  //   return body; \n  // }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Nav category={this.state.data}/>\n          <Switch>\n            <Route exact path='/'> <Home /> </Route>\n            {this.state.data ? this.state.data.map( topic => <Route path={'/'+topic.title}> <Topics data={topic} /> </Route>) : \"\"}\n            \n          </Switch>\n        </Router>        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}